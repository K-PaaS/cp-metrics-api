// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/metrics/cluster/dashboard": {
            "get": {
                "description": "It is created according to the IaaS information requested when creating the cluster.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create model.DashboardResult",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.DashboardResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.DashboardResult"
                        }
                    }
                }
            }
        },
        "/v1/metrics/cluster/node": {
            "get": {
                "description": "It is created according to the IaaS information requested when creating the cluster.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create model.NodeStateInfo",
                "parameters": [
                    {
                        "description": "Node State Info",
                        "name": "iaasBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.NodeStateInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.NodeStateInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.NodeStateInfo"
                        }
                    }
                }
            }
        },
        "/v1/metrics/cluster/ping/{clusterId}": {
            "get": {
                "description": "It is function that returns the cluster state.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create model.ResponsePing",
                "parameters": [
                    {
                        "description": "Infomation of ClusterID",
                        "name": "ResponsePing",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ResponsePing"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponsePing"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponsePing"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.ClusterItems": {
            "type": "object",
            "properties": {
                "clusterId": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "clusterProviderType": {
                    "type": "string"
                },
                "namespaceCount": {
                    "$ref": "#/definitions/model.NamespaceCount"
                },
                "nodeCount": {
                    "$ref": "#/definitions/model.NodeCount"
                },
                "podCount": {
                    "$ref": "#/definitions/model.PodCount"
                },
                "pvCount": {
                    "$ref": "#/definitions/model.PvCount"
                },
                "pvcCount": {
                    "$ref": "#/definitions/model.PvcCount"
                },
                "usage": {
                    "$ref": "#/definitions/model.Usage"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "model.Cpu": {
            "type": "object",
            "properties": {
                "percent": {
                    "type": "integer"
                },
                "usage": {
                    "type": "integer"
                }
            }
        },
        "model.DashboardResult": {
            "type": "object",
            "properties": {
                "clusterStatus": {
                    "type": "integer"
                },
                "detailMessage": {
                    "type": "string"
                },
                "httpStatusCode": {
                    "type": "integer"
                },
                "itemMetaData": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ClusterItems"
                    }
                },
                "namespaceStatus": {
                    "type": "integer"
                },
                "podStatus": {
                    "type": "integer"
                },
                "pvStatus": {
                    "type": "integer"
                },
                "pvcStatus": {
                    "type": "integer"
                },
                "resultCode": {
                    "type": "string"
                },
                "resultMessage": {
                    "type": "string"
                },
                "topNodeCPU": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TopNodeCPU"
                    }
                },
                "topNodeMem": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TopNodeMEM"
                    }
                }
            }
        },
        "model.Memory": {
            "type": "object",
            "properties": {
                "percent": {
                    "type": "integer"
                },
                "usage": {
                    "type": "integer"
                }
            }
        },
        "model.NamespaceCount": {
            "type": "object",
            "properties": {
                "all": {
                    "type": "integer"
                },
                "count": {
                    "type": "integer"
                }
            }
        },
        "model.NodeCount": {
            "type": "object",
            "properties": {
                "all": {
                    "type": "integer"
                },
                "count": {
                    "type": "integer"
                }
            }
        },
        "model.NodeStateInfo": {
            "type": "object",
            "properties": {
                "clusterId": {
                    "type": "string"
                },
                "cpuRatio": {
                    "type": "number"
                },
                "memRatio": {
                    "type": "number"
                },
                "nodeName": {
                    "type": "string"
                },
                "updateTime": {
                    "type": "string"
                }
            }
        },
        "model.PodCount": {
            "type": "object",
            "properties": {
                "all": {
                    "type": "integer"
                },
                "count": {
                    "type": "integer"
                }
            }
        },
        "model.PvCount": {
            "type": "object",
            "properties": {
                "all": {
                    "type": "integer"
                },
                "count": {
                    "type": "integer"
                }
            }
        },
        "model.PvcCount": {
            "type": "object",
            "properties": {
                "all": {
                    "type": "integer"
                },
                "count": {
                    "type": "integer"
                }
            }
        },
        "model.ResponsePing": {
            "type": "object",
            "properties": {
                "cluster_id": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                }
            }
        },
        "model.TopNodeCPU": {
            "type": "object",
            "properties": {
                "clusterId": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "cpu": {
                    "$ref": "#/definitions/model.Cpu"
                },
                "memory": {
                    "$ref": "#/definitions/model.Memory"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.TopNodeMEM": {
            "type": "object",
            "properties": {
                "clusterId": {
                    "type": "string"
                },
                "clusterName": {
                    "type": "string"
                },
                "cpu": {
                    "$ref": "#/definitions/model.Cpu"
                },
                "memory": {
                    "$ref": "#/definitions/model.Memory"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.Usage": {
            "type": "object",
            "properties": {
                "cpu": {
                    "type": "number"
                },
                "memory": {
                    "type": "number"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "MetricCollector API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
